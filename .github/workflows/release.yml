# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CreateRelease

on:
  push:
    tags:
      - 'v*'

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: ./engine/hexen2/Hexen2.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release
  
  # Platform to build.
  BUILD_ARCH: Win32
  
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: windows-2022

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: 'true'

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.1.3

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}},Platform=${{env.BUILD_ARCH}} ${{env.SOLUTION_FILE_PATH}}

    - name: Create artifact
      run: ./engine/hexen2/Build-glh2/x86/Release/package4github.bat

    - name: Create Release
      id: create_release
      uses: comnoco/create-release-action@v2.0.5
      with:
        draft: false
        prerelease: false
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref_name }}

    - name: Upload win32 artifact
      uses: actions/github-script@v4
      with:
        script: |
          const fs = require('fs');
          // Upload the release asset
          await github.repos.uploadReleaseAsset({
            owner: context.repo.owner,
            repo: context.repo.repo,
            release_id: ${{ steps.create_release.outputs.id }},
            name: "hexen2_game_binaries.zip",
            data: await fs.readFileSync("./hexen2_game_binaries.zip")
          });
